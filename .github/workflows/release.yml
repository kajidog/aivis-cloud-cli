name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup npm authentication
        run: |
          # Create .npmrc for authentication
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
          echo "registry=https://registry.npmjs.org/" >> ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install Dependencies 
        run: |
          # Remove problematic package-lock.json that causes "Invalid Version" errors
          if [ -f package-lock.json ]; then
            echo "Removing problematic package-lock.json"
            rm package-lock.json
          fi
          
          echo "Installing dependencies fresh"
          npm install --ignore-scripts

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # Run changeset publish which will handle the npm publishing
          publish: npm run release-packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup Go for binary builds
        if: steps.changesets.outputs.published == 'true'
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build release binaries
        if: steps.changesets.outputs.published == 'true'
        run: |
          cd packages/npm
          npm run build

      - name: Create GitHub Release with binaries
        if: steps.changesets.outputs.published == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}
          name: Release v${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}
          body: |
            ## What's Changed
            
            See [CHANGELOG.md](https://github.com/kajidog/aivis-cloud-cli/blob/main/packages/npm/CHANGELOG.md) for detailed changes.
            
            ## Installation
            
            ### Via npm (recommended)
            ```bash
            npx @kajidog/aivis-cloud-cli --help
            ```
            
            ### Direct binary download
            Download the appropriate binary for your platform from the assets below and add it to your PATH.
          files: |
            packages/npm/binaries/linux-amd64/aivis-cli
            packages/npm/binaries/linux-arm64/aivis-cli
            packages/npm/binaries/darwin-amd64/aivis-cli
            packages/npm/binaries/darwin-arm64/aivis-cli
            packages/npm/binaries/windows-amd64/aivis-cli.exe
            packages/npm/binaries/windows-arm64/aivis-cli.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}